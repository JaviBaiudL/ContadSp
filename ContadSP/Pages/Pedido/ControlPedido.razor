@page "/provision/{estado}"

@using ContadSP.Repositorios
@using ContadSP.Models
@using System.Text.Json

@inject IRepositorio<Pedido> repositorioPedido
@inject IRepositorio<Provision> repositorioProvision
@inject IRepositorio<ProcesoPedido> repositorioProcesoPedido
@inject IJSRuntime JSRuntime

@implements IHandleAfterRender


<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    @if(Estado == "pendientes")
                    {
                        <h3 class="text-center">Lista de Pedidos de Provisión (Pendientes de aprobación) </h3>
                    }
                    else
                    {
                        <h3 class="text-center">Lista de Pedidos de Provisión (Aprobados) </h3>
                    }

                </div>
                <div class="card-body">
                    
                    @if (muestra == null)
                    {
                        <p><em>No se encontraron pedidos de provisión</em></p>
                    }
                    else
                    {
                        
                        <div style="overflow: auto;">
                                <table class="table table-striped table-responsive table-hover">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>Id</th>
                                            <th>Fecha de provision</th>
                                            <th>Descripción</th>
                                            <th>Total</th>
                                            <th>Total letra</th>
                                            <th>Destino</th>
                                            <th>Usuario</th>
                                            <th>Acciones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var provision in muestra)
                                        {
                                            <tr>
                                                <td>@provision.id</td>
                                                <td>@provision.fecha_provision</td>
                                                <td>@provision.descripcion</td>
                                                <td>@provision.total</td>
                                                <td>@provision.total_letra</td>
                                                <td>@provision.Destino.destino</td>
                                                <td>@provision.Usuario.nombre_usuario</td>
                                            <td>
                                                <a class="btn btn-success mb-2" title="Ver detalle"><span class="oi oi-eye" aria-hidden="true"></span></a>
                                                @if (Estado == "pendientes")
                                                {
                                                    <a class="btn btn-success" title="Aprobar provisión" @onclick="() => AprobarProvision(provision)"><span class="oi oi-check" aria-hidden="true"></span></a>
                                                }else if(Estado == "aprobados")
                                                {
                                                    <a class="btn btn-success" title="Confirmar entrega" @onclick="() => ConfirmarEntrega(provision)"><span class="oi oi-check" aria-hidden="true"></span></a>
                                                }
                                            </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>
                        </div>
                     
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string Estado { get; set; }


    private List<Provision> provisiones = new List<Provision>();
    private List<Provision> muestra = new List<Provision>();

    private Pedido pedido = new Pedido();
    private Provision provision = new Provision();
    private ProcesoPedido procesoPedido = new ProcesoPedido();
    
    private string previousEstado;
    string añoActual = DateTime.Now.Year.ToString();

    protected override async Task OnParametersSetAsync()
    {
        provisiones = (await repositorioProvision.ObtenerProvisiones()).ToList();
        if (previousEstado != Estado)
        {
            previousEstado = Estado;
            if (Estado == "pendientes")
            {
                muestra = provisiones.Where(p => p.estado == false).ToList();
            }
            else if (Estado == "aprobados")
            {
                muestra = provisiones.Where(p => p.estado == true).ToList();
            }
        }
    }

    private async Task AprobarProvision(Provision prov)
    {
        await CargarPoceso(prov);
        await repositorioProvision.CambiarEstado(prov.id);
        await CargarPedido(procesoPedido, prov);
        await JSRuntime.InvokeVoidAsync("showSweetAlert", "¡Éxito!", "La provisión se aprobó correctamente", "success");
        muestra = provisiones.Where(p => p.estado == false).ToList();
        StateHasChanged();
    }

    private async Task CargarPoceso(Provision prov)
    {
        procesoPedido.num_proceso = (await repositorioProcesoPedido.ObtenerUltimoProcesoNumero(prov.proceso_id)) + 1;
        procesoPedido.proceso_id = prov.proceso_id;
        procesoPedido.proceso_completo = prov.Proceso.sigla + "-" + añoActual;
        await repositorioProcesoPedido.Agregar(procesoPedido);
        procesoPedido.id = (await repositorioProcesoPedido.ObtenerUltimoProcesoPedidoId());
        
    }

    private async Task CargarPedido(ProcesoPedido proc, Provision prov)
    {
        pedido.numero_acta = ((await repositorioPedido.ObtenerUltimoPedido()) + 1).ToString() + "-" + añoActual;
        pedido.proceso_pedido_id = proc.id;
        pedido.provision_id = prov.id;
        pedido.estado = false;
        await repositorioPedido.Agregar(pedido);
    }

    private async Task ConfirmarEntrega(Provision prov)
    {
        
    }
}
